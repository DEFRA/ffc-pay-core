#!/usr/bin/env sh
if [ -z "$(docker network ls --filter name=^ffc-pay$ --format={{.Name}})" ]; then
  echo "Creating ffc-pay Docker network"
  docker network create ffc-pay
fi

set -e
projectRoot="$(a="/$0"; a=${a%/*}; a=${a:-.}; a=${a#/}/; cd "$a/.." || return; pwd)"
payments="true"

show_help() {
  echo "
    Usage: path/to/ffc-pay-core [OPTION...]
    Run payment services.

    Options:
      -s, --statements  include statement services
      -h, --help       display this help text
    "
}

while :; do
  case $1 in
    -s|--statements)
      statements="true"
      ;;
    -S|--statements-only)
      payments="false"
      statements="true"
      ;;    
    -h|--help)   # Call a "show_help" function to display a synopsis, then exit.
      show_help
      exit
      ;;
    *)
      break
  esac

  shift
done

cd "${projectRoot}"

if [ "${payments}" = "true" ]; then
  ./ffc-pay-batch-verifier/scripts/start -d;
  ./ffc-pay-batch-processor/scripts/start -d;
  ./ffc-pay-enrichment/scripts/start -d;
  ./ffc-pay-processing/scripts/start -d;
  ./ffc-pay-submission/scripts/start -d;
  ./ffc-pay-file-publisher/scripts/start -d;
  ./ffc-pay-file-receiver/scripts/start -d;
  ./ffc-pay-responses/scripts/start -d;
  ./ffc-pay-tracking/scripts/start -d;
  ./ffc-pay-web/scripts/start -d;
  ./ffc-pay-request-editor/scripts/start -d;
  ./ffc-pay-event-hub/scripts/start -d;
  ./ffc-pay-data-hub/scripts/start -d;
  ./ffc-pay-report-generator/scripts/start -d;
  ./ffc-pay-alerting/scripts/start -d;
  ./ffc-pay-gateway/scripts/start -d;
  ./ffc-pay-injection/scripts/start -d;
  ./ffc-pay-xb/scripts/start -d;
  ./ffc-pay-dps/scripts/start -d;
  ./ffc-pay-demographics/scripts/start -d;
  ./ffc-pay-fdmr/scripts/start -d;
fi

if [ "${statements}" = "true" ]; then
  ./ffc-pay-statement-data/scripts/start -d;
  ./ffc-pay-statement-constructor/scripts/start -d;
  ./ffc-pay-statement-generator/scripts/start -d;
  ./ffc-pay-statement-publisher/scripts/start -d;
  ./ffc-pay-statement-receiver/scripts/start -d;
fi

ffc-pay-core/seed
