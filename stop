#!/usr/bin/env sh
set -e
projectRoot="$(a="/$0"; a=${a%/*}; a=${a:-.}; a=${a#/}/; cd "$a/.." || return; pwd)"

show_help() {
  echo "
    Usage: scripts/test [OPTION...]
    Build and run payment services.

    Options:
      -h, --help       display this help text
    "
}

while :; do
  case $1 in
    -h|--help)   # Call a "show_help" function to display a synopsis, then exit.
      show_help
      exit
      ;;
    *)
      break
  esac

  shift
done

compose() {
  cd "${projectRoot}"
  cd ./$@ && docker-compose down -v
  exit 0
}

(
if [ ! -z "$1" ];
then
  compose "$1"
else

cd "${projectRoot}"
cd ./ffc-pay-batch-processor && \
  docker-compose down -v
cd "${projectRoot}"
cd ./ffc-pay-enrichment && \
  docker-compose down -v
cd "${projectRoot}"
cd ./ffc-pay-processing && \
  docker-compose down -v
cd "${projectRoot}"
cd ./ffc-pay-submission && \
  docker-compose down -v
cd "${projectRoot}"
cd ./ffc-pay-responses && \
  docker-compose down -v
cd "${projectRoot}"
cd ./ffc-pay-web && \
  docker-compose down -v
cd "${projectRoot}"
cd ./ffc-pay-request-editor && \
  docker-compose down -v
fi
)
