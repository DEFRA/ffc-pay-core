#!/usr/bin/env sh
set -e
projectRoot="$(a="/$0"; a=${a%/*}; a=${a:-.}; a=${a#/}/; cd "$a/.." || return; pwd)"
payments="true"

show_help() {
  echo "
    Usage: path/to/ffc-pay-core [OPTION...]
    Open payment services in VS Code.

    Options:
      -s, --statements  include statement services
      -h, --help       display this help text
    "
}

while :; do
  case $1 in
    -s|--statements)
      statements="true"
      ;;
    -S|--statements-only)
      payments="false"
      statements="true"
      ;;
    -h|--help)   # Call a "show_help" function to display a synopsis, then exit.
      show_help
      exit
      ;;
    *)
      break
  esac

  shift
done

cd "${projectRoot}"
if [ "${payments}" = "true" ]; then
  code ./ffc-pay-batch-verifier;
  code ./ffc-pay-batch-processor;
  code ./ffc-pay-enrichment;
  code ./ffc-pay-processing;
  code ./ffc-pay-submission;
  code ./ffc-pay-tracking;
  code ./ffc-pay-file-publisher;
  code ./ffc-pay-file-receiver;
  code ./ffc-pay-responses;
  code ./ffc-pay-tracking;
  code ./ffc-pay-web;
  code ./ffc-pay-request-editor;
  code ./ffc-pay-event-hub;
  code ./ffc-pay-data-hub;
  code ./ffc-pay-report-generator;
  code ./ffc-pay-alerting;
  code ./ffc-pay-gateway;
fi

if [ "${statements}" = "true" ]; then
  code ./ffc-pay-statement-data;
  code ./ffc-pay-statement-constructor;
  code ./ffc-pay-statement-generator;
  code ./ffc-pay-statement-publisher;
  code ./ffc-pay-statement-receiver;
fi
